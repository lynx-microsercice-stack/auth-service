services:
  auth-service:
    image: auth-application
    container_name: auth-application
    ports:
      - "8081:8081"
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/lynx-realm
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/realms/lynx-realm/protocol/openid-connect/certs
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/lynx-realm
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_TOKEN_URI=http://keycloak:8080/realms/lynx-realm/protocol/openid-connect/token
    depends_on:
      - keycloak
      - postgres
      - redis
    networks:
      - auth-network
      - spring-cloud-api-gateway_gateway-network

  keycloak:
    image: keycloak/keycloak
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "8088:8080"
    depends_on:
      - postgres
    networks:
      - auth-network

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "6001:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6002:6379"
    volumes:
      - auth_redis_data:/data
    networks:
      - auth-network

volumes:
  auth_postgres_data:
  auth_redis_data:

networks:
  auth-network:
    driver: bridge 
  spring-cloud-api-gateway_gateway-network:
    external: true